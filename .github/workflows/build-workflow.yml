name: Build Libraries
on:
  workflow_dispatch:
  release:
    types: [created]


jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    if: (contains(github.event.head_commit.message, 'onlyMac') || contains(github.event.head_commit.message, 'onlyLinux')) != true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Code
        shell: cmd
        #maybe this from will work: https://github.com/cisco/ChezScheme/blob/main/c/vs.bat
        run: |
          dir/w
          echo ProgramW6432: %ProgramW6432%
          echo %ProgramW6432%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat "amd64"
          dir "%ProgramW6432%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\"
          call "%ProgramW6432%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          python rebuild-libs.py all package
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: nest-libs-windows-${{ github.event.release.tag_name }}.zip
          asset_name: nest-libs-windows-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: nest-libs-windows
          path: nest-libs-*.zip

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    if: (contains(github.event.head_commit.message, 'onlyWindows') || contains(github.event.head_commit.message, 'onlyMac')) != true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Code
        shell: bash
        run: |
          sudo apt update
          #edited list from https://github.com/libsdl-org/SDL/blob/main/docs/README-linux.md#build-dependencies
          sudo apt-get install pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxtst-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl-dev libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev libpipewire-0.3-dev libwayland-dev libdecor-0-dev liburing-dev
          pip3 install --user meson
          python3 rebuild-libs.py all package
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: nest-libs-linux-${{ github.event.release.tag_name }}.tar.gz
          asset_name: nest-libs-linux-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: nest-libs-linux
          path: nest-libs-*.tar.gz

  build-macos:
    name: Build (MacOS)
    runs-on: macos-latest
    if: (contains(github.event.head_commit.message, 'onlyWindows') || contains(github.event.head_commit.message, 'onlyLinux')) != true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Code
        shell: bash
        run: |
          brew install meson
          python3 rebuild-libs.py all package
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: nest-libs-macos-${{ github.event.release.tag_name }}.tar.gz
          asset_name: nest-libs-macos-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: nest-libs-osx
          path: nest-libs-*.tar.gz
